/*
 *  Copyright (C) 2010 Eros Zanchetta <eros@sslmit.unibo.it>
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * TupleCheckBox.java
 *
 * Created on 3-giu-2010, 11.00.45
 */

package gui.panels;

/**
 *
 * @author Eros Zanchetta <eros@sslmit.unibo.it>
 */
public class TupleCheckBox extends javax.swing.JPanel {

    private TupleGenerator tupleGenerator;
    
    /** Creates new form TupleCheckBox */
    public TupleCheckBox(String label, TupleGenerator tupleGenerator) {
        initComponents();

		setLabel(label);
        
        this.tupleGenerator = tupleGenerator;
    }

	public boolean isSelected() {
		return tuple.isSelected();
	}

	public String getLabel() {
		return tuple.getText();
	}

	public void setLabel(String label) {
		tuple.setText(label);
	}

	public void setSelected() {
		tuple.setSelected(true);
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tuple = new javax.swing.JCheckBox();

        tuple.setSelected(true);
        tuple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tupleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tuple, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(158, 158, 158))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tuple)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tupleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tupleActionPerformed
        tupleGenerator.updateNumberOfSelectedTuples();
    }//GEN-LAST:event_tupleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox tuple;
    // End of variables declaration//GEN-END:variables

}

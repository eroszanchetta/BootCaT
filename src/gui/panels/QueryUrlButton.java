/*
 *  Copyright (C) 2017 Eros Zanchetta <eros@sslmit.unibo.it>
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * QueryUrlButton.java
 *
 * Created on 12-oct-2017, 13.14.45
 */

package gui.panels;

import gui.dialogs.GenericMessage;
import java.awt.Color;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Eros Zanchetta <eros@sslmit.unibo.it>
 */
public class QueryUrlButton extends javax.swing.JPanel {
    
    private URL             url;
    private boolean         visited;
    
    private final ExternalBrowser externalBrowser;
    
    /** Creates new form TupleCheckBox
     * @param label
     * @param url
     * @param externalBrowser */
    public QueryUrlButton(String label, URL url, ExternalBrowser externalBrowser) {
        initComponents();

        setURL(url);
        this.tupleLabel.setText(label);
        this.externalBrowser = externalBrowser;
        
        visited = false;
    }
    
    public final void setURL(URL url) {
        this.url = url;
    }

    public boolean isVisited() {
        return visited;
    }
    
    public void setVisited() {
        tupleLabel.setForeground(Color.GRAY);
        visited = true;
    }
    
    /**
     * Open URL in a browser
     */
    public void openUrl() {
        if (!externalBrowser.isDestinationFolderWarningDisplayed()) {
            externalBrowser.setDestinationFolderWarningDisplayed(true);
            
            String msg = "Your query is about to be opened in you default browser.<br />"
                    + "Make sure you save the results page in this folder:<br /><br />" +
                    externalBrowser.getMainPanel().getPaths().getQueriesDir();
                    
            GenericMessage message = new GenericMessage(
                    externalBrowser.getMainPanel(),
                    true,
                    msg,
                    GenericMessage.Type.INFO,
                    null,
                    externalBrowser.getMainPanel().getPaths().getQueriesDir());
            message.setVisible(true);
        }        
        
        try {
            Desktop.getDesktop().browse(url.toURI());
        } catch (IOException ex) {
            Logger.getLogger(UrlCheckBox.class.getName()).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException ex) {
            Logger.getLogger(QueryUrlButton.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        openButton = new javax.swing.JButton();
        tupleLabel = new javax.swing.JLabel();

        openButton.setText("Open in Browser");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        tupleLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        tupleLabel.setForeground(new java.awt.Color(0, 51, 255));
        tupleLabel.setText("tupleLabel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(openButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tupleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openButton)
                    .addComponent(tupleLabel)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        openUrl();
        setVisited();
    }//GEN-LAST:event_openButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton openButton;
    private javax.swing.JLabel tupleLabel;
    // End of variables declaration//GEN-END:variables

}

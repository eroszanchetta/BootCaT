/*
 *  Copyright (C) 2010 Eros Zanchetta <eros@sslmit.unibo.it>
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * Display.java
 *
 * Created on May 28, 2010, 6:36:55 PM
 */
package gui.dialogs.options;

import gui.ComboBoxItem;
import gui.panels.MainPanel;
import javax.swing.UIManager;

/**
 *
 * @author Eros Zanchetta
 */
public class Display extends javax.swing.JPanel {

	private final MainPanel mainPanel;
	private boolean         initialized = false;

	/** Creates new form Display
     * @param mainPanel
     */
	public Display(MainPanel mainPanel) {
		initComponents();

		this.mainPanel = mainPanel;

		addAvailableLafs();

		restartRequiredLabel.setVisible(false);

		initialized = true;
	}

	private void addAvailableLafs() {
		for (int i = 0; i < UIManager.getInstalledLookAndFeels().length; ++i) {
			UIManager.LookAndFeelInfo currentLaf = UIManager.getInstalledLookAndFeels()[i];

			ComboBoxItem item = new ComboBoxItem(currentLaf.getName(), currentLaf);
			lafChooserCombobox.addItem(item);

			/* if this laf is the currently selected one,
			 * set it as the selected one in the combobox
			 */
			if (UIManager.getLookAndFeel().getClass().getName().equals(currentLaf.getClassName())) {
				lafChooserCombobox.setSelectedItem(item);
			}
		}
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lafChooserCombobox = new javax.swing.JComboBox();
        restartRequiredLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(450, 380));

        jLabel1.setText("Choose look and feel");

        lafChooserCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lafChooserComboboxActionPerformed(evt);
            }
        });

        restartRequiredLabel.setForeground(new java.awt.Color(255, 0, 0));
        restartRequiredLabel.setText("<html><p>Restart BootCaT frontend to apply changes</p></html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lafChooserCombobox, 0, 438, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(restartRequiredLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lafChooserCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(restartRequiredLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(307, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void lafChooserComboboxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lafChooserComboboxMouseReleased
	}//GEN-LAST:event_lafChooserComboboxMouseReleased

	private void lafChooserComboboxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lafChooserComboboxPropertyChange
	}//GEN-LAST:event_lafChooserComboboxPropertyChange

	private void lafChooserComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lafChooserComboboxActionPerformed
		if (!initialized) return;

		ComboBoxItem item = (ComboBoxItem) lafChooserCombobox.getSelectedItem();
		UIManager.LookAndFeelInfo laf = (UIManager.LookAndFeelInfo) item.getValue();

		mainPanel.getMain().getConfig().setLookAndFeelName(laf.getClassName());

		restartRequiredLabel.setVisible(true);
	}//GEN-LAST:event_lafChooserComboboxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox lafChooserCombobox;
    private javax.swing.JLabel restartRequiredLabel;
    // End of variables declaration//GEN-END:variables
}
